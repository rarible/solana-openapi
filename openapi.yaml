openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1

paths:

  ######################### Solana - API #########################

  /v0.1/tokens/{tokenAddress}:
    get:
      tags:
        - token-controller
      description: "Returns Token by address"
      operationId: getTokenByAddress
      parameters:
        - name: "tokenAddress"
          in: path
          required: true
          description: "Token address in base58"
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/tokens/{tokenAddress}/meta:
    get:
      tags:
        - token-controller
      description: Returns the token meta by token address
      operationId: getTokenMetaByAddress
      parameters:
        - name: tokenAddress
          in: path
          description: "Token address in base58"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenMeta"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  /v0.1/balance/{accountAddress}:
    get:
      tags:
        - balance-controller
      description: "Returns balance by account address"
      operationId: getBalanceByAccount
      parameters:
        - name: "accountAddress"
          in: path
          required: true
          description: "Account address in base58"
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Balance"
        '404':
          $ref: "#/components/responses/EntityNotFound"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

components:
  schemas:
    #################### Solana - Model ####################
    Token:
      type: object
      properties:
        address:
          type: string
        creators:
          type: array
          description: Creators of the token, may be empty, but if present, the 'share' sums up to 100
          items:
            "$ref": "#/components/schemas/TokenCreatorPart"
        supply:
          $ref: "#/components/schemas/BigInteger"
        collection:
          $ref: "#/components/schemas/Collection"
        createdAt:
          type: string
          format: date-time
          description: "Datetime when the token was created"
        updatedAt:
          type: string
          format: date-time
          description: "Datetime when the token was updated"
      required:
        - address
        - creators
        - supply
        - createdAt
        - updatedAt

    Balance:
      required:
        - account
        - value
      type: object
      properties:
        account:
          type: string
          description: Account address in base58
        value:
          "$ref": "#/components/schemas/BigInteger"

    Collection:
      oneOf:
        - $ref: "#/components/schemas/JsonCollection"
        - $ref: "#/components/schemas/OnChainCollection"
    JsonCollection:
      type: object
      description: Metaplex collection descriptor for version 1.0.0, which is stored in a remote JSON, see https://docs.metaplex.com/token-metadata/Versions/v1.0.0/nft-standard
      required:
        - name
        - family
        - hash
      properties:
        type:
          type: string
          enum:
            - JSON_COLLECTION
        name:
          type: string
        family:
          type: string
        hash:
          description: Unique hash of the collection, helps to distinguish collections with the same name/family created by different minters
          type: string
    OnChainCollection:
      type: object
      description: Metaplex collection descriptor for version 1.1.0, which is stored on-chain, see https://docs.metaplex.com/token-metadata/Versions/v1.1.0/overview
      required:
        - address
        - verified
      properties:
        address:
          type: string
        verified:
          type: boolean
        type:
          type: string
          enum:
            - ON_CHAIN_COLLECTION

    TokenMeta:
      type: object
      properties:
        name:
          type: string
          description: "Name of the token"
        description:
          type: string
          description: "Description of the token"
        collection:
          "$ref": "#/components/schemas/TokenMetaCollection"
        attributes:
          type: array
          description: "Attributes of the token"
          items:
            "$ref": "#/components/schemas/TokenMetaAttribute"
        content:
          type: array
          description: "Token content information"
          items:
            $ref: "#/components/schemas/TokenMetaContent"
      required:
        - name
        - attributes
        - content

    TokenMetaCollection:
      type: object
      description: Metaplex collection descriptor for version 1.0.0, which is stored in a remote JSON, see https://docs.metaplex.com/token-metadata/Versions/v1.0.0/nft-standard
      required:
        - name
        - family
        - hash
      properties:
        name:
          type: string
        family:
          type: string
        hash:
          description: Unique hash of the collection, helps to distinguish collections with the same name/family created by different minters
          type: string

    TokenMetaAttribute:
      required:
        - key
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        type:
          type: string
        format:
          type: string

    TokenMetaContent:
      type: object
      properties:
        url:
          type: string
        representation:
          type: string
          enum:
            - PREVIEW
            - BIG
            - ORIGINAL
        mimeType:
          type: string
          example: "image/png"
        size:
          type: integer
          format: int64
      required:
        - url
        - representation
      oneOf:
        - $ref: "#/components/schemas/ImageContent"
        - $ref: "#/components/schemas/VideoContent"

    ImageContent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - IMAGE
        width:
          type: integer
        height:
          type: integer

    VideoContent:
      type: object
      properties:
        "@type":
          type: string
          enum:
            - VIDEO
        width:
          type: integer
        height:
          type: integer

    TokenCreatorPart:
      required:
        - address
        - share
      type: object
      properties:
        address:
          type: string
        share:
          type: integer

    #################### Solana - Events ####################
    TokenEvent:
      required:
        - eventId
        - address
      properties:
        eventId:
          type: string
        address:
          type: string
      oneOf:
        - $ref: "#/components/schemas/TokenUpdateEvent"
        - $ref: "#/components/schemas/TokenDeleteEvent"
    TokenUpdateEvent:
      type: object
      required:
        - token
      properties:
        type:
          type: string
          enum:
            - UPDATE
        token:
          $ref: "#/components/schemas/Token"
    TokenDeleteEvent:
      type: object
      required:
        - address
      properties:
        type:
          type: string
          enum:
            - DELETE

    BalanceEvent:
      required:
        - eventId
        - account
      properties:
        eventId:
          type: string
        account:
          description: Account address in base58
          type: string
      oneOf:
        - $ref: "#/components/schemas/BalanceUpdateEvent"
    BalanceUpdateEvent:
      type: object
      required:
        - balance
      properties:
        type:
          type: string
          enum:
            - UPDATE
        balance:
          $ref: "#/components/schemas/Balance"
    #################### Solana - Errors ####################

    SolanaApiErrorEntityNotFound:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - NOT_FOUND
          default: NOT_FOUND
        message:
          type: string
          description: "Error message"

    SolanaApiErrorBadRequest:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - BAD_REQUEST
            - VALIDATION
          default: BAD_REQUEST
        message:
          type: string
          description: "Error message"

    SolanaApiErrorServerError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          enum:
            - UNKNOWN
          default: UNKNOWN
        message:
          type: string
          description: "Error message"

    #################### Referenced Types ####################

    BigInteger:
      type: string
      example: 123456
    BigDecimal:
      type: string
      example: 123456.789


  #======================== Responses ============================#

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SolanaApiErrorBadRequest"
    ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SolanaApiErrorServerError"
    EntityNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SolanaApiErrorEntityNotFound"
